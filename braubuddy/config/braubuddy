[global]
# Hosting #
##environment: "production"
# Server host and port
server.socket_host: "0.0.0.0"
server.socket_port: 8080
# Logging #
##log.access_file: ’/var/log/braubuddy_access.log’
##log.error_file: ’/var/log/braubuddy_error.log’
log.screen: True
# Units ('celsius' or 'fahrenheit')
units: 'celsius'
# Frequency of thermostat cycle in seconds
frequency: 60 
# Temperature poll retry count
retry_count: 3
# Temperature poll retry delay (seconds)
retry_delay: 5
# Dashboard title
dashboard_title = 'Braubuddy'
# Display dashboard footer
dashboard_footer: True 

## Thermometer ##
# Automatically discovered thermometer.
thermometer: braubuddy.thermometer.AutoThermometer()
# Dummy thermometer which generates random temperatures..
##thermometer: braubuddy.thermometer.DummyThermometer()
# DS18B20 thermometer
##thermometer: braubuddy.thermometer.DS18B20Thermometer()
# TEMPer USB thermometer
##thermometer: braubuddy.thermometer.TEMPerThermometer()

## Environment Controller ##
# Automatically discovered environmenal controller.
envcontroller: braubuddy.envcontroller.AutoEnvController()
# Dummy environment controller. Use for testing.
##envcontroller: braubuddy.envcontroller.DummyEnvController()
# Environmental controller utilising a Tosr0x relay module.
##envcontroller: braubuddy.envcontroller.Tosr0xEnvController()

## Thermostat ##
# Thermostat which uses upper/lower temperature ranges
thermostat: braubuddy.thermostat.SimpleRangedThermostat(20, lower_out=2, lower_in=1, upper_in=1, upper_out=2)

[outputs]
### Configure these.

# Text file
##txt_out: braubuddy.output.TextFileOutput(out_file='~/braubuddy.log', separator=' ', show_labels=False, show_units=True, show_timestamp=True, timestamp_format='%Y-%m-%d %H:%M:%S')
# CSV file
##csv_out: braubuddy.output.CSVFileOutput(out_file='~/braubuddy.csv', show_timestamp=True, timestamp_format='%Y-%m-%d %H:%M:%S')
# JSON file
##json_out: braubuddy.output.JSONFileOutput(out_file='~/braubuddy.json', datapoint_limit=44640)
# Image file
##image_out: braubuddy.output.ImageFileOutput(units='celsius', out_file='braubuddy.png', out_format='png', chart_title='Braubuddy', chart_mins=10080, x_label_mins=60)
# Graphite API
##graphite_out: braubuddy.output.GraphiteAPIOutput(host='localhost', port=2003, prefix='braubuddy')
# Librato API
##librato_out: braubuddy.output.LibratoAPIOutput(units='celsius', username='myusername', token='mytoken', source='braubuddy') 
# Twitter API
##twitter_out: braubuddy.output.TwitterAPIOutput(units='celsius', frequency=86400, message='Environment Status: Temp {temp}{units} | Target {target}{units} | Heat {heat}% | Cool {cool}% #braubuddy')
# Dweet API
##dweet_out: braubuddy.output.DweetAPIOutput(units='celsius', frequency=60, thing_name='braubuddy') 
