[global]
### Hosting ###
##environment: "production"
# Server host and port
server.socket_host: "0.0.0.0"
server.socket_port: 8080
### Logging ###
##log.error_file: ’site.log’
log.screen: True

[components]
### Components ###
# Units ('celsius' or 'fahrenheit')
units: 'celsius'
# Frequency of thermostat cycle in seconds
frequency: 2 

### Thermometer ###
# A dummy thermometer which generates random temperatures. Use for testing.
thermometer: braubuddy.thermometer.DummyRandomRange()
# A TEMPer USB thermometer
##thermometer: braubuddy.thermometer.Temper()

### Environment Controller ###
# A dummy environment controller. Use for testing.
envcontroller: braubuddy.envcontroller.DummyEnvController()
# An environment controller utilising the Tosr0x family of relay boards.
# Uses relay 0 to switch heating and relay 1 to switch cooling.
##envcontroller: braubuddy.envcontroller.Tosr0xEnvController()

### Thermostat ###
# A thermostat which uses an 'upper' temperature range to determine when to
# cool and a 'lower' temperature range to determine when to heat.
thermostat: braubuddy.thermostat.UpperLowerRange('celsius', 18.5, 19.5, 20.5, 21.5) 
# A simplified :class:`UpperLowerRange` thermostat. Automatically calculates
# ranges based on target temperature and step value.
##thermostat: braubuddy.thermostat.SimpleTargeted('celsius', 20) 

[outputs]
### Outputs ###
# Text file
txt_out: braubuddy.output.TextFile(out_file='/tmp/output/bb.txt', units='celsius', show_timestamp=True)
# CSV file
csv_out: braubuddy.output.CSVFile(out_file='/tmp/output/bb.csv', units='celsius', show_timestamp=True)
# JSON file
json_out: braubuddy.output.JSONFile(out_file='/tmp/output/bb.json', units='celsius', datapoint_limit=44640)
