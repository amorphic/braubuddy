[global]
# Hosting #
##environment: "production"
# Server host and port
server.socket_host: "0.0.0.0"
server.socket_port: 8080
# Logging #
##log.access_file: ’/var/log/braubuddy_access.log’
##log.error_file: ’/var/log/braubuddy_error.log’
log.screen: True
# Units ('celsius' or 'fahrenheit')
units: 'celsius'
# Frequency of thermostat cycle in seconds
frequency: 60 
# Temperature poll retry count
retry_count: 3
# Temperature poll retry delay (seconds)
retry_delay: 5
# Display page footer
show_footer: True 

[components]
# Thermometer #
# Dummy thermometer which generates random temperatures. Use for testing.
##thermometer: braubuddy.thermometer.DummyRandomRange()
# TEMPer USB thermometer
thermometer: braubuddy.thermometer.Temper()

# Environment Controller #
# Dummy environment controller. Use for testing.
envcontroller: braubuddy.envcontroller.DummyEnvController()
# Environment controller utilising the Tosr0x family of relay modules.
# Uses relay 0 to switch heating and relay 1 to switch cooling.
##envcontroller: braubuddy.envcontroller.Tosr0xEnvController()

# Thermostat #
# Thermostat which uses an 'upper' temperature range to determine when to
# cool and a 'lower' temperature range to determine when to heat.
thermostat: braubuddy.thermostat.SimpleRanged(20, 'celsius', 2, 1, 1, 2) 

[outputs]
# Text file
txt_out: braubuddy.output.TextFile(out_file='/home/james/output/bb.txt', units='celsius', show_timestamp=True)
# CSV file
csv_out: braubuddy.output.CSVFile(out_file='/home/james/output/bb.csv', units='celsius', show_timestamp=True)
# JSON file
json_out: braubuddy.output.JSONFile(out_file='/home/james/output/bb.json', units='celsius', datapoint_limit=44640)
